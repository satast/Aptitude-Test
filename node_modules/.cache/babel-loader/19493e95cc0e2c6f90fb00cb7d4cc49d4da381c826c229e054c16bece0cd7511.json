{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SATHISH\\\\Desktop\\\\myfirst\\\\src\\\\main.js\";\nimport React from \"react\";\nimport Header from \"./header\";\nimport Test from \"./Test\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = ({\n  question,\n  options = [],\n  onAnswer\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: question,\n            value: option,\n            id: `${question}-${index}`,\n            onChange: e => onAnswer(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: `${question}-${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this);\n};\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","Header","Test","jsxDEV","_jsxDEV","Main","question","options","onAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","option","index","type","name","value","id","onChange","e","target","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/SATHISH/Desktop/myfirst/src/main.js"],"sourcesContent":["import React from \"react\";\r\nimport Header from \"./header\";\r\n\r\nimport Test from \"./Test\";\r\nimport './App.css';\r\n\r\nconst Main = ({ question, options = [], onAnswer }) => {\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <Test/>\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{question}</h5>\r\n        {options.map((option, index) => (\r\n          <div className=\"form-check\" key={index}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name={question}\r\n              value={option}\r\n              id={`${question}-${index}`}\r\n              onChange={(e) => onAnswer(e.target.value)}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={`${question}-${index}`}>\r\n              {option}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n</div>\r\n        );\r\n  };\r\n\r\n\r\n\r\n\r\nexport default Main;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAE7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,IAAI,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,OAAO,GAAG,EAAE;EAAEC;AAAS,CAAC,KAAK;EACnD,oBACEJ,OAAA;IAAAK,QAAA,gBACEL,OAAA,CAACH,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTT,OAAA,CAACF,IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACXT,OAAA;MAAKU,SAAS,EAAC,WAAW;MAAAL,QAAA,eACxBL,OAAA;QAAKU,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBL,OAAA;UAAIU,SAAS,EAAC,YAAY;UAAAL,QAAA,EAAEH;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACzCN,OAAO,CAACQ,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBb,OAAA;UAAKU,SAAS,EAAC,YAAY;UAAAL,QAAA,gBACzBL,OAAA;YACEU,SAAS,EAAC,kBAAkB;YAC5BI,IAAI,EAAC,OAAO;YACZC,IAAI,EAAEb,QAAS;YACfc,KAAK,EAAEJ,MAAO;YACdK,EAAE,EAAE,GAAGf,QAAQ,IAAIW,KAAK,EAAG;YAC3BK,QAAQ,EAAGC,CAAC,IAAKf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACJ,KAAK;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC,eACFT,OAAA;YAAOU,SAAS,EAAC,kBAAkB;YAACW,OAAO,EAAE,GAAGnB,QAAQ,IAAIW,KAAK,EAAG;YAAAR,QAAA,EACjEO;UAAM;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA,GAXuBI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYjC,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEJ,CAAC;AAACa,EAAA,GA3BErB,IAAI;AAgCV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}