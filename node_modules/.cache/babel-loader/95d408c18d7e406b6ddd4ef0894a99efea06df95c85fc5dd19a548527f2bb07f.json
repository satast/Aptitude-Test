{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SATHISH\\\\Desktop\\\\myfirst\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: \"Q1. What is the capital of France?\",\n  options: [\"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"],\n  correctAnswer: \"Paris\"\n}, {\n  question: \"Q2. What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\"\n}, {\n  question: \"Q3. It was Sunday on Jan 1, 2006. What was the day of the week Jan 1, 2010?\",\n  options: [\"Sunday\", \"Saturday\", \"Friday\", \"Wednesday\"],\n  correctAnswer: \"Friday\"\n}\n// ... (Your questions array here)\n];\nconst Test = () => {\n  _s();\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const handleAnswer = (question, answer) => {\n    setAnswers({\n      ...answers,\n      [question]: answer\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitted(true);\n  };\n\n  // Combined event handler function\n  const preventActions = event => {\n    if (event.type === 'contextmenu' || event.type === 'copy' || event.type === 'dragstart' || event.type === 'selectstart') {\n      event.preventDefault();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    onContextMenu: preventActions,\n    onCopy: preventActions,\n    onDragStart: preventActions,\n    onSelectStart: preventActions,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [questions.map((q, index) => /*#__PURE__*/_jsxDEV(Question, {\n        question: q.question,\n        options: q.options,\n        onAnswer: answer => handleAnswer(q.question, answer)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-3\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"You've completed the test successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"O/nYjJkSnbJ3pHgVyFGmBZJX18s=\");\n_c = Test;\nconst Question = ({\n  question,\n  options,\n  onAnswer\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: question,\n          value: option,\n          id: `${question}-${index}`,\n          onChange: e => onAnswer(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: `${question}-${index}`,\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Question;\nexport default Test && Question;\nvar _c, _c2;\n$RefreshReg$(_c, \"Test\");\n$RefreshReg$(_c2, \"Question\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","questions","question","options","correctAnswer","Test","_s","answers","setAnswers","submitted","setSubmitted","handleAnswer","answer","handleSubmit","e","preventDefault","preventActions","event","type","className","onContextMenu","onCopy","onDragStart","onSelectStart","children","onSubmit","map","q","index","Question","onAnswer","fileName","_jsxFileName","lineNumber","columnNumber","_c","option","name","value","id","onChange","target","htmlFor","_c2","$RefreshReg$"],"sources":["C:/Users/SATHISH/Desktop/myfirst/src/Test.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst questions = [\r\n  {\r\n    question: \"Q1. What is the capital of France?\",\r\n    options: [\"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"],\r\n    correctAnswer: \"Paris\"\r\n  },\r\n  {\r\n    question: \"Q2. What is 2 + 2?\",\r\n    options: [\"3\", \"4\", \"5\", \"6\"],\r\n    correctAnswer: \"4\"\r\n  },\r\n  {\r\n    question: \"Q3. It was Sunday on Jan 1, 2006. What was the day of the week Jan 1, 2010?\",\r\n    options: [\"Sunday\", \"Saturday\", \"Friday\", \"Wednesday\"],\r\n    correctAnswer: \"Friday\"\r\n  },\r\n  // ... (Your questions array here)\r\n];\r\n\r\nconst Test = () => {\r\n  const [answers, setAnswers] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleAnswer = (question, answer) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [question]: answer\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n  };\r\n\r\n  // Combined event handler function\r\n  const preventActions = (event) => {\r\n    if (event.type === 'contextmenu' || event.type === 'copy' || event.type === 'dragstart' || event.type === 'selectstart') {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\" onContextMenu={preventActions} onCopy={preventActions} onDragStart={preventActions} onSelectStart={preventActions}>\r\n      <form onSubmit={handleSubmit}>\r\n        {questions.map((q, index) => (\r\n          <Question\r\n            key={index}\r\n            question={q.question}\r\n            options={q.options}\r\n            onAnswer={(answer) => handleAnswer(q.question, answer)}\r\n          />\r\n        ))}\r\n        <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit</button>\r\n      </form>\r\n      {submitted && (\r\n        <div className=\"alert alert-success mt-4\">\r\n          <strong>You've completed the test successfully!</strong>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Question = ({ question, options, onAnswer }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{question}</h5>\r\n        {options.map((option, index) => (\r\n          <div className=\"form-check\" key={index}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name={question}\r\n              value={option}\r\n              id={`${question}-${index}`}\r\n              onChange={(e) => onAnswer(e.target.value)}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={`${question}-${index}`}>\r\n              {option}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test && Question;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}