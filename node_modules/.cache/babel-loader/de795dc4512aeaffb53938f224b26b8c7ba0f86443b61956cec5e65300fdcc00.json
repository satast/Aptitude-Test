{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SATHISH\\\\Desktop\\\\myfirst\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: \"Q1. What is the capital of France?\",\n  options: [\"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"],\n  correctAnswer: \"Paris\"\n}, {\n  question: \"Q2. What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\"\n}, {\n  question: \"Q3. It was Sunday on Jan 1, 2006. What was the day of the week Jan 1, 2010?\",\n  options: [\"Sunday\", \"Saturday\", \"Friday\", \"Wednesday\"],\n  correctAnswer: \"Friday\"\n}\n// ... (Your questions array here)\n];\nconst Test = ({\n  question,\n  options,\n  onAnswer\n}) => {\n  _s();\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const handleAnswer = (question, answer) => {\n    setAnswers({\n      ...answers,\n      [question]: answer\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitted(true);\n  };\n\n  // Combined event handler function\n  const preventActions = event => {\n    if (event.type === 'contextmenu' || event.type === 'copy' || event.type === 'dragstart' || event.type === 'selectstart') {\n      event.preventDefault();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-5\",\n        onContextMenu: preventActions,\n        onCopy: preventActions,\n        onDragStart: preventActions,\n        onSelectStart: preventActions,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [questions.map((q, index) => /*#__PURE__*/_jsxDEV(Question, {\n            question: q.question,\n            options: q.options,\n            onAnswer: answer => handleAnswer(q.question, answer)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary mt-3\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: question,\n            value: option,\n            id: `${question}-${index}`,\n            onChange: e => onAnswer(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 10\n        }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: `${question}-${index}`,\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"You've completed the test successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"O/nYjJkSnbJ3pHgVyFGmBZJX18s=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","questions","question","options","correctAnswer","Test","onAnswer","_s","answers","setAnswers","submitted","setSubmitted","handleAnswer","answer","handleSubmit","e","preventDefault","preventActions","event","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onContextMenu","onCopy","onDragStart","onSelectStart","onSubmit","map","q","index","Question","option","name","value","id","onChange","target","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/SATHISH/Desktop/myfirst/src/Test.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst questions = [\r\n  {\r\n    question: \"Q1. What is the capital of France?\",\r\n    options: [\"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"],\r\n    correctAnswer: \"Paris\"\r\n  },\r\n  {\r\n    question: \"Q2. What is 2 + 2?\",\r\n    options: [\"3\", \"4\", \"5\", \"6\"],\r\n    correctAnswer: \"4\"\r\n  },\r\n  {\r\n    question: \"Q3. It was Sunday on Jan 1, 2006. What was the day of the week Jan 1, 2010?\",\r\n    options: [\"Sunday\", \"Saturday\", \"Friday\", \"Wednesday\"],\r\n    correctAnswer: \"Friday\"\r\n  },\r\n  // ... (Your questions array here)\r\n];\r\n\r\n\r\n\r\n\r\nconst Test = ({ question, options, onAnswer }) => {\r\n  const [answers, setAnswers] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleAnswer = (question, answer) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [question]: answer\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n  };\r\n\r\n  // Combined event handler function\r\n  const preventActions = (event) => {\r\n    if (event.type === 'contextmenu' || event.type === 'copy' || event.type === 'dragstart' || event.type === 'selectstart') {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-3\">\r\n    <div className=\"card-body\">\r\n      <h5 className=\"card-title\">{question}</h5>\r\n     <div className=\"container mt-5\" onContextMenu={preventActions} onCopy={preventActions} onDragStart={preventActions} onSelectStart={preventActions}>\r\n      <form onSubmit={handleSubmit}>\r\n        {questions.map((q, index) => (\r\n          <Question\r\n            key={index}\r\n            question={q.question}\r\n            options={q.options}\r\n            onAnswer={(answer) => handleAnswer(q.question, answer)}\r\n          />\r\n        ))}\r\n        <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit</button>\r\n      </form>\r\n\r\n      {options.map((option, index) => (\r\n         <div className=\"form-check\" key={index}>\r\n      <input\r\n            className=\"form-check-input\"\r\n            type=\"radio\"\r\n            name={question}\r\n            value={option}\r\n            id={`${question}-${index}`}\r\n            onChange={(e) => onAnswer(e.target.value)}\r\n          /> </div>\r\n        ))}\r\n        \r\n     \r\n      <label className=\"form-check-label\" htmlFor={`${question}-${index}`}>\r\n            {option}\r\n          </label>\r\n      {submitted && (\r\n        <div className=\"alert alert-success mt-4\">\r\n          <strong>You've completed the test successfully!</strong>\r\n        </div>\r\n        \r\n      )}\r\n    </div>\r\n\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}