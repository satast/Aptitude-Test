{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SATHISH\\\\Desktop\\\\myfirst\\\\src\\\\header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport logoImage from './logo.png';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header({\n  question,\n  options = [],\n  onAnswer\n}) {\n  _s();\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: question,\n          value: option,\n          id: `${question}-${index}`,\n          onChange: e => onAnswer(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: `${question}-${index}`,\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n  const initialTime = 2 * 60 * 60; // Initial time in seconds (2 hours)\n  const [seconds, setSeconds] = useState(initialTime);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds(prevSeconds => {\n        if (prevSeconds <= 0) {\n          clearInterval(interval);\n          return 0;\n        }\n        return prevSeconds - 1;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    style: body,\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      style: customStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: headerTop,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: headername,\n          children: \"Aptitude Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: impmsg,\n          children: \"*You are under our surveillance, so don't try to copy questions or any other malpractices!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: timerStyle,\n          children: [\"Timer: \", formatTime(seconds)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImage,\n          alt: \"Company Logo\",\n          style: logoStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 1\n  }, this);\n}\n_s(Header, \"KhCp/0dnawU3A2bnKdGwdJRCugA=\");\n_c = Header;\nexport default Header;\nconst body = {\n  backgroundColor: \"aquamarine\"\n};\nconst customStyle = {\n  background: \"#669999\",\n  margin: \"auto -16px\",\n  padding: \"0px 12px\",\n  fontFamily: \"Times New Roman\",\n  fontWeight: \"bold\",\n  boxShadow: \"0 0 10px rgba(0, 0, 0, 0.3)\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  // Center horizontally\n  alignItems: \"center\",\n  // Center vertically\n  overflow: \"hidden\"\n};\nconst headerTop = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  width: \"100%\",\n  padding: \"10px 0\" // Added padding for visual space\n};\nconst headername = {\n  fontWeight: \"bold\",\n  textShadow: \"3px 3px 3px white\",\n  margin: \"0 10px\" // Added margin to prevent text from touching other elements\n};\nconst impmsg = {\n  animation: \"runningText 10s linear infinite\",\n  color: \"red\",\n  textShadow: \"1px 1px 1px black\",\n  whiteSpace: \"nowrap\",\n  margin: \"0 10px\" // Added margin to prevent text from touching other elements\n};\nconst logoStyle = {\n  height: \"50px\",\n  width: \"100px\",\n  margin: \"0 10px\" // Added margin to prevent logo from touching other elements\n};\nconst timerStyle = {\n  fontWeight: \"bold\",\n  color: \"Yellow\",\n  marginLeft: \"300px\",\n  animation: \"blinking 2s infinite\" // Added margin to prevent timer from touching other elements\n};\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","logoImage","jsxDEV","_jsxDEV","Header","question","options","onAnswer","_s","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","type","name","value","id","onChange","e","target","htmlFor","initialTime","seconds","setSeconds","interval","setInterval","prevSeconds","clearInterval","formatTime","hours","Math","floor","minutes","secs","String","padStart","style","body","customStyle","headerTop","headername","impmsg","timerStyle","src","alt","logoStyle","_c","backgroundColor","background","margin","padding","fontFamily","fontWeight","boxShadow","display","justifyContent","alignItems","overflow","width","textShadow","animation","color","whiteSpace","height","marginLeft","$RefreshReg$"],"sources":["C:/Users/SATHISH/Desktop/myfirst/src/header.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport logoImage from './logo.png';\r\nimport './App.css';\r\n\r\n\r\nfunction Header({ question, options = [], onAnswer }) {\r\n\r\n  <div className=\"card mb-3\">\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">{question}</h5>\r\n    {options.map((option, index) => (\r\n      <div className=\"form-check\" key={index}>\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name={question}\r\n          value={option}\r\n          id={`${question}-${index}`}\r\n          onChange={(e) => onAnswer(e.target.value)}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor={`${question}-${index}`}>\r\n          {option}\r\n        </label>\r\n      </div>\r\n    ))}\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n  const initialTime = 2 * 60 * 60; // Initial time in seconds (2 hours)\r\n  const [seconds, setSeconds] = useState(initialTime);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setSeconds(prevSeconds => {\r\n        if (prevSeconds <= 0) {\r\n          clearInterval(interval);\r\n          return 0;\r\n        }\r\n        return prevSeconds - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const formatTime = (seconds) => {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secs = seconds % 60;\r\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n\r\n<body style={body}>\r\n    <header style={customStyle}>\r\n    <div style={headerTop}>\r\n        <h1 style={headername}>Aptitude Test</h1>\r\n        <p style={impmsg}>\r\n          *You are under our surveillance, so don't try to copy questions or any other malpractices!!!\r\n        </p>\r\n        <p style={timerStyle}>Timer: {formatTime(seconds)}</p>\r\n        <img src={logoImage} alt=\"Company Logo\" style={logoStyle} />\r\n      </div>\r\n      \r\n    </header>\r\n\r\n    </body>\r\n  \r\n  );\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\nconst body ={\r\n  backgroundColor: \"aquamarine\",\r\n}\r\n\r\nconst customStyle = {\r\n  background: \"#669999\",\r\n  margin: \"auto -16px\",\r\n  padding: \"0px 12px\",\r\n  fontFamily: \"Times New Roman\",\r\n  fontWeight: \"bold\",\r\n  boxShadow: \"0 0 10px rgba(0, 0, 0, 0.3)\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\", // Center horizontally\r\n  alignItems: \"center\", // Center vertically\r\n  overflow: \"hidden\"\r\n};\r\n\r\nconst headerTop = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"space-between\",\r\n  width: \"100%\",\r\n  padding: \"10px 0\" // Added padding for visual space\r\n};\r\n\r\nconst headername= {\r\n  fontWeight: \"bold\",\r\n  textShadow: \"3px 3px 3px white\",\r\n  margin: \"0 10px\" // Added margin to prevent text from touching other elements\r\n};\r\n\r\nconst impmsg = {\r\n  animation: \"runningText 10s linear infinite\",\r\n  color: \"red\",\r\n  textShadow: \"1px 1px 1px black\",\r\n  whiteSpace: \"nowrap\",\r\n  margin: \"0 10px\" // Added margin to prevent text from touching other elements\r\n};\r\n\r\nconst logoStyle = {\r\n  height: \"50px\",\r\n  width: \"100px\",\r\n  margin: \"0 10px\" // Added margin to prevent logo from touching other elements\r\n};\r\n\r\nconst timerStyle = {\r\n  fontWeight: \"bold\",\r\n  color: \"Yellow\",\r\n  marginLeft: \"300px\",\r\n  animation: \"blinking 2s infinite\" // Added margin to prevent timer from touching other elements\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,SAASC,MAAMA,CAAC;EAAEC,QAAQ;EAAEC,OAAO,GAAG,EAAE;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAEpD,aAAAL,OAAA;IAAKM,SAAS,EAAC,WAAW;IAAAC,QAAA,eAC1BP,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBP,OAAA;QAAIM,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEL;MAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACzCR,OAAO,CAACS,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBd,OAAA;QAAKM,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBP,OAAA;UACEM,SAAS,EAAC,kBAAkB;UAC5BS,IAAI,EAAC,OAAO;UACZC,IAAI,EAAEd,QAAS;UACfe,KAAK,EAAEJ,MAAO;UACdK,EAAE,EAAE,GAAGhB,QAAQ,IAAIY,KAAK,EAAG;UAC3BK,QAAQ,EAAGC,CAAC,IAAKhB,QAAQ,CAACgB,CAAC,CAACC,MAAM,CAACJ,KAAK;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,eACFX,OAAA;UAAOM,SAAS,EAAC,kBAAkB;UAACgB,OAAO,EAAE,GAAGpB,QAAQ,IAAIY,KAAK,EAAG;UAAAP,QAAA,EACjEM;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA,GAXuBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYjC,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;EAKJ,MAAMY,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC2B,WAAW,CAAC;EAEnD1B,SAAS,CAAC,MAAM;IACd,MAAM6B,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,UAAU,CAACG,WAAW,IAAI;QACxB,IAAIA,WAAW,IAAI,CAAC,EAAE;UACpBC,aAAa,CAACH,QAAQ,CAAC;UACvB,OAAO,CAAC;QACV;QACA,OAAOE,WAAW,GAAG,CAAC;MACxB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,UAAU,GAAIN,OAAO,IAAK;IAC9B,MAAMO,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACT,OAAO,GAAG,IAAI,CAAC;IACxC,MAAMU,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAET,OAAO,GAAG,IAAI,GAAI,EAAE,CAAC;IACjD,MAAMW,IAAI,GAAGX,OAAO,GAAG,EAAE;IACzB,OAAO,GAAGY,MAAM,CAACL,KAAK,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAACD,IAAI,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACjH,CAAC;EAED,oBAEFrC,OAAA;IAAMsC,KAAK,EAAEC,IAAK;IAAAhC,QAAA,eACdP,OAAA;MAAQsC,KAAK,EAAEE,WAAY;MAAAjC,QAAA,eAC3BP,OAAA;QAAKsC,KAAK,EAAEG,SAAU;QAAAlC,QAAA,gBAClBP,OAAA;UAAIsC,KAAK,EAAEI,UAAW;UAAAnC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzCX,OAAA;UAAGsC,KAAK,EAAEK,MAAO;UAAApC,QAAA,EAAC;QAElB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJX,OAAA;UAAGsC,KAAK,EAAEM,UAAW;UAAArC,QAAA,GAAC,SAAO,EAACuB,UAAU,CAACN,OAAO,CAAC;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtDX,OAAA;UAAK6C,GAAG,EAAE/C,SAAU;UAACgD,GAAG,EAAC,cAAc;UAACR,KAAK,EAAES;QAAU;UAAAvC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAGX;AAACN,EAAA,CApEQJ,MAAM;AAAA+C,EAAA,GAAN/C,MAAM;AAsEf,eAAeA,MAAM;AAGrB,MAAMsC,IAAI,GAAE;EACVU,eAAe,EAAE;AACnB,CAAC;AAED,MAAMT,WAAW,GAAG;EAClBU,UAAU,EAAE,SAAS;EACrBC,MAAM,EAAE,YAAY;EACpBC,OAAO,EAAE,UAAU;EACnBC,UAAU,EAAE,iBAAiB;EAC7BC,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE,6BAA6B;EACxCC,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,QAAQ;EAAE;EAC1BC,UAAU,EAAE,QAAQ;EAAE;EACtBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMlB,SAAS,GAAG;EAChBe,OAAO,EAAE,MAAM;EACfE,UAAU,EAAE,QAAQ;EACpBD,cAAc,EAAE,eAAe;EAC/BG,KAAK,EAAE,MAAM;EACbR,OAAO,EAAE,QAAQ,CAAC;AACpB,CAAC;AAED,MAAMV,UAAU,GAAE;EAChBY,UAAU,EAAE,MAAM;EAClBO,UAAU,EAAE,mBAAmB;EAC/BV,MAAM,EAAE,QAAQ,CAAC;AACnB,CAAC;AAED,MAAMR,MAAM,GAAG;EACbmB,SAAS,EAAE,iCAAiC;EAC5CC,KAAK,EAAE,KAAK;EACZF,UAAU,EAAE,mBAAmB;EAC/BG,UAAU,EAAE,QAAQ;EACpBb,MAAM,EAAE,QAAQ,CAAC;AACnB,CAAC;AAED,MAAMJ,SAAS,GAAG;EAChBkB,MAAM,EAAE,MAAM;EACdL,KAAK,EAAE,OAAO;EACdT,MAAM,EAAE,QAAQ,CAAC;AACnB,CAAC;AAED,MAAMP,UAAU,GAAG;EACjBU,UAAU,EAAE,MAAM;EAClBS,KAAK,EAAE,QAAQ;EACfG,UAAU,EAAE,OAAO;EACnBJ,SAAS,EAAE,sBAAsB,CAAC;AACpC,CAAC;AAAC,IAAAd,EAAA;AAAAmB,YAAA,CAAAnB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}