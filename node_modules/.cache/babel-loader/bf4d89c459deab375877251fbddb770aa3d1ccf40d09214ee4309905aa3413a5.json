{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SATHISH\\\\Desktop\\\\myfirst\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Question from './header';\n\n// Test Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const questions = [{\n    question: \"Q1. What is the capital of France?\",\n    options: [\"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"],\n    correctAnswer: \"Paris\"\n  }, {\n    question: \"Q2. What is 2 + 2?\",\n    options: [\"3\", \"4\", \"5\", \"6\"],\n    correctAnswer: \"4\"\n  }, {\n    question: \"Q3. It was Sunday on Jan 1, 2006. What was the day of the week Jan 1, 2010?\",\n    options: [\"Sunday\", \"Saturday\", \"Friday\", \"Wednesday\"],\n    correctAnswer: \"Friday\"\n  }\n  // ... (Your questions array here)\n  ];\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const handleAnswer = (question, answer) => {\n    setAnswers({\n      ...answers,\n      [question]: answer\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitted(true);\n  };\n\n  // Function to disable text selection and right-click\n  const preventActions = event => {\n    if (event.type === 'contextmenu' || event.type === 'copy' || event.type === 'dragstart' || event.type === 'selectstart') {\n      event.preventDefault();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    onContextMenu: preventActions,\n    onCopy: preventActions,\n    onDragStart: preventActions,\n    onSelectStart: preventActions,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [questions.map((q, index) => /*#__PURE__*/_jsxDEV(Question, {\n        question: q.question,\n        options: q.options,\n        onAnswer: answer => handleAnswer(q.question, answer)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-3\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"You've completed the test successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"O/nYjJkSnbJ3pHgVyFGmBZJX18s=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","Question","jsxDEV","_jsxDEV","Test","_s","questions","question","options","correctAnswer","answers","setAnswers","submitted","setSubmitted","handleAnswer","answer","handleSubmit","e","preventDefault","preventActions","event","type","className","onContextMenu","onCopy","onDragStart","onSelectStart","children","onSubmit","map","q","index","onAnswer","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SATHISH/Desktop/myfirst/src/Test.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Question from './header';\r\n\r\n// Test Component\r\nconst Test = () => {\r\n  const questions = [\r\n    {\r\n      question: \"Q1. What is the capital of France?\",\r\n      options: [\"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"],\r\n      correctAnswer: \"Paris\"\r\n    },\r\n    {\r\n      question: \"Q2. What is 2 + 2?\",\r\n      options: [\"3\", \"4\", \"5\", \"6\"],\r\n      correctAnswer: \"4\"\r\n    },\r\n    {\r\n      question: \"Q3. It was Sunday on Jan 1, 2006. What was the day of the week Jan 1, 2010?\",\r\n      options: [\"Sunday\", \"Saturday\", \"Friday\", \"Wednesday\"],\r\n      correctAnswer: \"Friday\"\r\n    },\r\n    // ... (Your questions array here)\r\n  ];\r\n\r\n  const [answers, setAnswers] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleAnswer = (question, answer) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [question]: answer\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n  };\r\n\r\n  // Function to disable text selection and right-click\r\n  const preventActions = (event) => {\r\n    if (event.type === 'contextmenu' || event.type === 'copy' || event.type === 'dragstart' || event.type === 'selectstart') {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\" onContextMenu={preventActions} onCopy={preventActions} onDragStart={preventActions} onSelectStart={preventActions}>\r\n      <form onSubmit={handleSubmit}>\r\n        {questions.map((q, index) => (\r\n          <Question\r\n            key={index}\r\n            question={q.question}\r\n            options={q.options}\r\n            onAnswer={(answer) => handleAnswer(q.question, answer)}\r\n          />\r\n        ))}\r\n        <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit</button>\r\n      </form>\r\n      {submitted && (\r\n        <div className=\"alert alert-success mt-4\">\r\n          <strong>You've completed the test successfully!</strong>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}